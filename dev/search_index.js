var documenterSearchIndex = {"docs":
[{"location":"instrument/#Instruments-1","page":"Instruments","title":"Instruments","text":"","category":"section"},{"location":"instrument/#","page":"Instruments","title":"Instruments","text":"CurrentModule = Julianda.Instrument","category":"page"},{"location":"instrument/#Functions-1","page":"Instruments","title":"Functions","text":"","category":"section"},{"location":"instrument/#","page":"Instruments","title":"Instruments","text":"Instrument.getCandles\nInstrument.getOrderBook\nInstrument.getPositionBook","category":"page"},{"location":"instrument/#Julianda.Instrument.getCandles","page":"Instruments","title":"Julianda.Instrument.getCandles","text":"getCandles(config::config, instrument::String, lastn::Int = 10, price::String = \"M\", granularity::String = \"M5\";kwargs...)\ngetCandles(config::config, instrument::String, from::DateTime, to::DateTime, price::String = \"M\", granularity::AbstractString = \"M5\";kwargs...)\ngetCandles(config::config, instrument::String, from::DateTime, n::Int = 10, price::String = \"M\", granularity::AbstractString = \"M5\";kwargs...)\ngetCandles(config::config, instrument::String, n::Int, to::DateTime, price::String = \"M\", granularity::AbstractString = \"M5\";kwargs...)\ngetCandles(config::config, instrument::String, from::DateTime, price::String = \"M\", granularity::AbstractString = \"M5\";kwargs...)\n\nGet candle information of a given instrument and returns a Candle struct Information includes: time, granularity, open, high, low, close, volume and a complete indicator\n\ngetCandles has five methods differing in how to request the number of candles to retrieve\n\nlastn: last \"n\" candles\nfrom and to: candles in a time interval specified by two dates\nfrom and \"n\", to and \"n\": n candles from o to the specified date\nfrom: all candles form the specified date\n\nArguments\n\npair: a valid instrument (e.g. \"EUR_USD\")\nprice: \"A\" for ask, \"B\" for bid, \"M\" for medium\ngranularity: a valid time interval [\"S5\",\"S10\",\"S15\",\"S30\",\"M1\",\"M2\",\"M4\",\"M5\",\"M10\",\"M15\",\"M30\",\"H1\",\"H2\",\"H3\",\"H4\",\"H6\",\"H8\",\"H12\",\"D\",\"W\",\"M\"]\n\nKeyword Arguments (TODO)\n\nsmooth::Bool, includeFirst::Bool, dailyaligment::Int, alignmentTimezone::String, weeklyAlignment::String\n\nExamples\n\ngetCandles(userdata,\"EUR_USD\",10,\"A\",\"M30\")\ngetCandles(userdata,\"EUR_JPY\",DateTime(2019,1,1),DateTime(2019,1,31),\"B\",\"H1\")\ngetCandles(userdata,\"EUR_USD\",DateTime(2019,1,31),10,\"A\",\"M30\")\ngetCandles(userdata,\"EUR_CHF\",10,DateTime(2019,1,31),\"AB\",\"M5\")\ngetCandles(userdata,\"EUR_USD\",DateTime(2019,1,31),\"M\",\"D\")\n\n\n\n\n\n","category":"function"},{"location":"instrument/#Julianda.Instrument.getOrderBook","page":"Instruments","title":"Julianda.Instrument.getOrderBook","text":"getOrderBook(config::config,instrument::String,time::DateTime=now())\n\nExample\n\ngetOrderBook(userdata,\"EUR_CHF\",DateTime(2017,1,31,4,00))\n\n\n\n\n\n","category":"function"},{"location":"instrument/#Julianda.Instrument.getPositionBook","page":"Instruments","title":"Julianda.Instrument.getPositionBook","text":"getPositionBook(config::config,instrument::String,time::DateTime=now())\n\nExample\n\ngetPositionBook(userdata,\"EUR_CHF\",DateTime(2017,1,31,4,00))\n\n\n\n\n\n","category":"function"},{"location":"account/#Accounts-1","page":"Accounts","title":"Accounts","text":"","category":"section"},{"location":"account/#","page":"Accounts","title":"Accounts","text":"CurrentModule = Julianda.Account","category":"page"},{"location":"account/#Functions-1","page":"Accounts","title":"Functions","text":"","category":"section"},{"location":"account/#","page":"Accounts","title":"Accounts","text":"Account.listAccounts\nAccount.getAccount\nAccount.getAccountSummary\nAccount.getAccountInstruments\nAccount.setAccountConfig","category":"page"},{"location":"account/#Julianda.Account.listAccounts","page":"Accounts","title":"Julianda.Account.listAccounts","text":"listAccounts(config::config)\n\nReturns a list of all account IDs and tags authorized for the given Token\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.getAccount","page":"Accounts","title":"Julianda.Account.getAccount","text":"getAccount(config::config)\n\nReturns an Oanda account struct when given a valid config\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.getAccountSummary","page":"Accounts","title":"Julianda.Account.getAccountSummary","text":"getAccountSummary(config::config)\n\nSimilar to getAccount but doesnt return the order & trade & positions lists, however it still returns a full account struct, just with these fields left undefined\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.getAccountInstruments","page":"Accounts","title":"Julianda.Account.getAccountInstruments","text":"getAccountInstruments(config::config, inst=nothing)\n\nReturns a list of tradeable instruments details for the account\n\nArguments\n\ninst: Can be left blank to return all tradeable instruments, or as a string csv of instruments to return their details\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.setAccountConfig","page":"Accounts","title":"Julianda.Account.setAccountConfig","text":"setAccountConfig(config::config, alias::String, marginRate::String)\n\nSet client configurable configuration settings\n\nArguments\n\nalias: The account alias\nmarginRate: The desired decimal margin rate formatted as a string\n\n\n\n\n\n","category":"function"},{"location":"account/#Structs-1","page":"Accounts","title":"Structs","text":"","category":"section"},{"location":"account/#","page":"Accounts","title":"Accounts","text":"Account.account\nAccount.instrumentDetail","category":"page"},{"location":"account/#Julianda.Account.account","page":"Accounts","title":"Julianda.Account.account","text":"The account struct given by Oanda\n\nFields\n\nNAV: The Net Asset Value of an account\nalias: User defined alias if one exists\nbalance: Current Account Balance\ncreatedByUserID: The User ID of the account creator\ncreatedTime: The time the account was created\ncurrency: The primary currency of the account\nhedgingEnabled: If the account is allowed to hedge\nid: The account ID\nlastTransactionID: The last transaction ID\nmarginAvailable: The margin still available on the account\nmarginCloseoutMarginUsed: The closeout margin used\nmarginCloseoutNAV: Margins closeout NAV\nmarginCloseoutPercent: Margin closeout percent\nmarginCloseoutPositionValue: Margin closeout position value\nmarginCloseoutUnrealizedPL: Margin closeout unrealised profit/loss\nmarginRate: The margin rate\nmarginUsed: Amount of margin used\nopenPositionCount: Number of open positions\nopenTradeCount: Number of open trades\norders: Orders of the account\npendingOrderCount: Number of pending orders\npl: The profit or loss over the lifetime of the account\npositionValue: Value of an accounts open positions\npositions: Positions of the account\nresettablePL: The resetable profit/loss since last reset\ntrades: Trades of the account\nunrealizedPL: The unrealised profit/loss of the account\nwithdrawalLimit: The withdrawal limit of the account\n\n\n\n\n\n","category":"type"},{"location":"account/#Julianda.Account.instrumentDetail","page":"Accounts","title":"Julianda.Account.instrumentDetail","text":"Tradeable Instrument data\n\nFields\n\ndisplayName: Instrument name\ndisplayPrecision: Decimal precision of the instrument\nmarginRate: Margin rate on the instrument\nmaximumOrderUnits: Max units that can be ordered\nmaximumPositionSize: max position size of the instrument\nmaximumTrailingStopDistance: max trailing stop distance\nminimumTrailingStopDistance: min trailing stop distance\nname: Request usable instrument name\npipLocation: current pip location\ntradeUnitsPrecision: Decimal precision of trade units\ntype: Type of instrument\n\n\n\n\n\n","category":"type"},{"location":"#Introduction-1","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"Julianda is an API wrapper for Oanda's REST-v20 API. This wrapper allows you to access the full functionality of Oanda's API, including configuring your account, creating orders, and checking prices.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"This Wrapper is currently incomplete and should be treated as such.","category":"page"},{"location":"#Getting-Started-1","page":"Introduction","title":"Getting Started","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"Getting started with Julianda is simple! Install it using:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"$ Pkg.add(\"https://github.com/CalebDepatie/Julianda.git\")","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"You will need to create a config file with your Oanda account information in the following YAML format:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"hostname: <<api-fxpractice.oanda.com or api-fxtrade.oanda.com>>\nstreaming_hostname: <<stream-fxpractice.oanda.com or stream-fxtrade.oanda.com>>\ntoken: <<your token>>\ndatetime: <<Your datetime format of choice IE UNIX>>\nusername: <<Account username>>\naccount: <<Account to initially interact with>>","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"If the config file was setup correctly the following code should work:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"using Julianda\nfoo = Julianda.Config.loadConfig(\"config\")\nbar = Julianda.Account.getAccount(foo)\nprintln(bar)","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"This will gave you a basic readout of your active account's information! Congratulations on your first Julianda API call!","category":"page"},{"location":"config/#Config-1","page":"Config","title":"Config","text":"","category":"section"},{"location":"config/#","page":"Config","title":"Config","text":"CurrentModule = Julianda.Config","category":"page"},{"location":"config/#","page":"Config","title":"Config","text":"Config files are YAML files with the information required to make Oanda API Calls A sample config file is as follows:","category":"page"},{"location":"config/#","page":"Config","title":"Config","text":"hostname: <<api-fxpractice.oanda.com or api-fxtrade.oanda.com>>\nstreaming_hostname: <<stream-fxpractice.oanda.com or stream-fxtrade.oanda.com>>\ntoken: <<your token>>\ndatetime: <<Your datetime format of choice IE UNIX>>\nusername: <<Account username>>\naccount: <<Account to initially interact with>>","category":"page"},{"location":"config/#Functions-1","page":"Config","title":"Functions","text":"","category":"section"},{"location":"config/#","page":"Config","title":"Config","text":"Config.loadConfig\nConfig.saveConfig\nConfig.changeAccount","category":"page"},{"location":"config/#Julianda.Config.loadConfig","page":"Config","title":"Julianda.Config.loadConfig","text":"loadConfig(path::String)\n\nLoads a YAML config\n\nArguments\n\npath: The relative path to the config file\n\n\n\n\n\n","category":"function"},{"location":"config/#Julianda.Config.saveConfig","page":"Config","title":"Julianda.Config.saveConfig","text":"saveConfig(path::String, config::config)\n\nSaves a config as a YAML file\n\nArguments\n\npath: Path to save the config at\nconfig: The config struct to save\n\n\n\n\n\n","category":"function"},{"location":"config/#Julianda.Config.changeAccount","page":"Config","title":"Julianda.Config.changeAccount","text":"changeAccount(config::config, acc::string)\n\nReturns the config with the new account number\n\nArguments\n\nconf: The config file to update\nacc: The string of the account identifier\n\n\n\n\n\n","category":"function"}]
}
