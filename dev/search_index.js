var documenterSearchIndex = {"docs":
[{"location":"account/#Accounts-1","page":"Accounts","title":"Accounts","text":"","category":"section"},{"location":"account/#","page":"Accounts","title":"Accounts","text":"CurrentModule = Julianda.Account","category":"page"},{"location":"account/#Functions-1","page":"Accounts","title":"Functions","text":"","category":"section"},{"location":"account/#","page":"Accounts","title":"Accounts","text":"Account.listAccounts\nAccount.getAccount\nAccount.getAccountSummary\nAccount.getAccountInstruments\nAccount.setAccountConfig","category":"page"},{"location":"account/#Julianda.Account.listAccounts","page":"Accounts","title":"Julianda.Account.listAccounts","text":"listAccounts(config::config)\n\nReturns a list of all account IDs and tags authorized for the given Token\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.getAccount","page":"Accounts","title":"Julianda.Account.getAccount","text":"getAccount(config::config)\n\nReturns an Oanda account struct when given a valid config\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.getAccountSummary","page":"Accounts","title":"Julianda.Account.getAccountSummary","text":"getAccountSummary(config::config)\n\nSimilar to getAccount but doesnt return the order & trade & positions lists, however it still returns a full account struct, just with these fields left undefined\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.getAccountInstruments","page":"Accounts","title":"Julianda.Account.getAccountInstruments","text":"getAccountInstruments(config::config, inst=nothing)\n\nReturns a list of tradeable instruments details for the account\n\nArguments\n\ninst: Can be left blank to return all tradeable instruments, or as a string csv of instruments to return their details\n\n\n\n\n\n","category":"function"},{"location":"account/#Julianda.Account.setAccountConfig","page":"Accounts","title":"Julianda.Account.setAccountConfig","text":"setAccountConfig(config::config, alias::String, marginRate::String)\n\nSet client configurable configuration settings\n\nArguments\n\nalias: The account alias\nmarginRate: The desired decimal margin rate formatted as a string\n\n\n\n\n\n","category":"function"},{"location":"account/#Structs-1","page":"Accounts","title":"Structs","text":"","category":"section"},{"location":"account/#","page":"Accounts","title":"Accounts","text":"Account.account\nAccount.instrumentDetail","category":"page"},{"location":"account/#Julianda.Account.account","page":"Accounts","title":"Julianda.Account.account","text":"The account struct given by Oanda\n\nFields\n\n- NAV: The Net Asset Value of an account\n- alias: User defined alias if one exists\n- balance: Current Account Balance\n- createdByUserID: The User ID of the account creator\n- createdTime: The time the account was created\n- currency: The primary currency of the account\n- hedgingEnabled: If the account is allowed to hedge\n- id: The account ID\n- lastTransactionID: The last transaction ID\n- marginAvailable: The margin still available on the account\n- marginCloseoutMarginUsed: The closeout margin used\n- marginCloseoutNAV: Margins closeout NAV\n- marginCloseoutPercent: Margin closeout percent\n- marginCloseoutPositionValue: Margin closeout position value\n- marginCloseoutUnrealizedPL: Margin closeout unrealised profit/loss\n- marginRate: The margin rate\n- marginUsed: Amount of margin used\n- openPositionCount: Number of open positions\n- openTradeCount: Number of open trades\n- orders: Orders of the account\n- pendingOrderCount: Number of pending orders\n- pl: The profit or loss over the lifetime of the account\n- positionValue: Value of an accounts open positions\n- positions: Positions of the account\n- resettablePL: The resetable profit/loss since last reset\n- trades: Trades of the account\n- unrealizedPL: The unrealised profit/loss of the account\n- withdrawalLimit: The withdrawal limit of the account\n\n\n\n\n\n","category":"type"},{"location":"account/#Julianda.Account.instrumentDetail","page":"Accounts","title":"Julianda.Account.instrumentDetail","text":"Tradeable Instrument data\n\nFields\n\n- displayName: Instrument name\n- displayPrecision: Decimal precision of the instrument\n- marginRate: Margin rate on the instrument\n- maximumOrderUnits: Max units that can be ordered\n- maximumPositionSize: max position size of the instrument\n- maximumTrailingStopDistance: max trailing stop distance\n- minimumTrailingStopDistance: min trailing stop distance\n- name: Request usable instrument name\n- pipLocation: current pip location\n- tradeUnitsPrecision: Decimal precision of trade units\n- type: Type of instrument\n\n\n\n\n\n","category":"type"},{"location":"#Introduction-1","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"Julianda is an API wrapper for Oanda's REST-v20 API. This wrapper allows you to access the full functionality of Oanda's API, including configuring your account, creating orders, and checking prices.","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"This Wrapper is currently incomplete and should be treated as such.","category":"page"},{"location":"#Getting-Started-1","page":"Introduction","title":"Getting Started","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"Getting started with Julianda is simple! Install it using:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"$ Pkg.add(\"https://github.com/CalebDepatie/Julianda.git\")","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"You will need to create a config file with your Oanda account information in the following YAML format:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"hostname: <<api-fxpractice.oanda.com or api-fxtrade.oanda.com>>\nstreaming_hostname: <<stream-fxpractice.oanda.com or stream-fxtrade.oanda.com>>\ntoken: <<your token>>\ndatetime: <<Your datetime format of choice IE UNIX>>\nusername: <<Account username>>\naccount: <<Account to initially interact with>>","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"If the config file was setup correctly the following code should work:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"using Julianda\nfoo = Julianda.Config.loadConfig(\"config\")\nbar = Julianda.Account.getAccount(foo)\nprintln(bar)","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"This will gave you a basic readout of your active account's information! Congratulations on your first Julianda API call!","category":"page"},{"location":"config/#Config-1","page":"Config","title":"Config","text":"","category":"section"},{"location":"config/#","page":"Config","title":"Config","text":"CurrentModule = Julianda.Config","category":"page"},{"location":"config/#","page":"Config","title":"Config","text":"Config files are YAML files with the information required to make Oanda API Calls A sample config file is as follows:","category":"page"},{"location":"config/#","page":"Config","title":"Config","text":"hostname: <<api-fxpractice.oanda.com or api-fxtrade.oanda.com>>\nstreaming_hostname: <<stream-fxpractice.oanda.com or stream-fxtrade.oanda.com>>\ntoken: <<your token>>\ndatetime: <<Your datetime format of choice IE UNIX>>\nusername: <<Account username>>\naccount: <<Account to initially interact with>>","category":"page"},{"location":"config/#Functions-1","page":"Config","title":"Functions","text":"","category":"section"},{"location":"config/#","page":"Config","title":"Config","text":"Config.loadConfig\nConfig.saveConfig\nConfig.changeAccount","category":"page"},{"location":"config/#Julianda.Config.loadConfig","page":"Config","title":"Julianda.Config.loadConfig","text":"loadConfig(path::String)\n\nLoads a YAML config\n\nArguments\n\npath: The relative path to the config file\n\n\n\n\n\n","category":"function"},{"location":"config/#Julianda.Config.saveConfig","page":"Config","title":"Julianda.Config.saveConfig","text":"saveConfig(path::String, config::config)\n\nSaves a config as a YAML file\n\nArguments\n\npath: Path to save the config at\nconfig: The config struct to save\n\n\n\n\n\n","category":"function"},{"location":"config/#Julianda.Config.changeAccount","page":"Config","title":"Julianda.Config.changeAccount","text":"changeAccount(config::config, acc::string)\n\nReturns the config with the new account number\n\nArguments\n\nconf: The config file to update\nacc: The string of the account identifier\n\n\n\n\n\n","category":"function"}]
}
